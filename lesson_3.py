"""Задача: реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""
while True:
    number_1 = int(input("Введите первое число: "))
    number_2 = int(input("Введите второе число: "))

    a = number_1
    b = number_2

    if number_2 != 0:
        def y(a, b):
            c = a / b
            return c
        result = y(a, b)
        print("Результат деления первого введённого числа на второе: ", result.__round__(3))
        break
     else:
         print("На ноль делить нельзя! Введите другое число!")

"""Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Реализовать вывод данных о пользователе одной строкой."""

def anketa (name, s_name, birth, town, email, phone):
    return f'{name} {s_name} {birth} {town} {email} {phone}'
print(anketa('Иван', 'Петров', '2000', 'Москва', 'ivan@mail.com', '+79876543210'))

"""Реализовать функцию my_func(), которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов."""

def my_func(var_1, var_2, var_3):
    if var_1 < var_2 and var_1 < var_3:
        return var_2 + var_3
    elif var_2 < var_1 and var_2 < var_3:
        return var_1 + var_3
    elif var_3 < var_1 and var_3 < var_2:
        return var_1 + var_2
print(my_func(3, 5, 1))

"""Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y.
Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла."""

x = int(input("Введите x: "))
y = int(input("Введите y: "))

#Первый вариант
def my_func(x,y):
    return x**y
print(f"Число {x} в степени {y} =", my_func(x,y))

#Второй вариант
def my_func_2(x,y):
    a = x
    for i in range(1, y, 1):
        a = a * x
    return a
print(f"Число {x} в степени {y} =", my_func_2(x,y))

"""Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа
вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел,
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу."""

# print("Введите строку чисел для расчёта суммы. Для завершения программы введите Q")
# list = []
# stopwhile = False
# while stopwhile is False:
#     for i in input("Введите строку чисел, через пробел: ").split():
#         if i == "Q":
#             stopwhile = True
#             break
#         else:
#             list.append(int(i))
#         print("Сумма чисел пошагово: ", sum(list))

"""Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием.
В программу должна попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().
"""

# int_func = lambda str: str.capitalize()
# string = input("Введите слово с маленькой буквы на латинице или строку из латинских слов, начинающуюся с маленьких букв: ")
# string = string.split(" ")
# string = [int_func(i) for i in string]
# print(" ".join(string))
